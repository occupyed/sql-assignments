
1. Display the author's full name and their birth date, sorted by birth date in ascending order.
```sql
SELECT CONCAT(first_name, ' ', last_name) AS author_full_name, birth_date
FROM author
ORDER BY birth_date ASC;
```

2. Display the book title, author's full name, and the genre of books that are currently available.
```sql
SELECT b.title, CONCAT(a.first_name, ' ', a.last_name) AS author_full_name, b.genre
FROM book b
JOIN author a ON b.author_id = a.author_id
WHERE b.available = TRUE;
```

3. Display the customer's full name, email, and birth date for customers born in the 1990s (i.e., between 1990 and 1999).
```sql
SELECT CONCAT(first_name, ' ', last_name) AS customer_full_name, email, birth_date
FROM customer
WHERE YEAR(birth_date) BETWEEN 1990 AND 1999;
```

4. Display the total number of book orders placed by each customer. Include the customer's full name in the result.
```sql
SELECT CONCAT(c.first_name, ' ', c.last_name) AS customer_full_name, COUNT(bo.order_id) AS total_orders
FROM customer c
LEFT JOIN book_order bo ON c.customer_id = bo.customer_id
GROUP BY c.customer_id, customer_full_name;
```

5. Display the book title, author's full name, and the total revenue generated by each book (total price of all orders for that book).
```sql
SELECT b.title, CONCAT(a.first_name, ' ', a.last_name) AS author_full_name, SUM(bo.total_price) AS total_revenue
FROM book b
JOIN author a ON b.author_id = a.author_id
LEFT JOIN book_order bo ON b.book_id = bo.book_id
GROUP BY b.book_id, title, author_full_name;
```

6. Display the genre of books and the average price of books in each genre.
```sql
SELECT genre, AVG(price) AS average_price
FROM book
GROUP BY genre;
```

7. Display the book title and publication year for books published before the year 2020.
```sql
SELECT title, publication_year
FROM book
WHERE publication_year < 2020;
```

8. Display the customer's full name and the total amount they have spent on book orders. Sort the results by total amount in descending order.
```sql
SELECT CONCAT(c.first_name, ' ', c.last_name) AS customer_full_name, SUM(bo.total_price) AS total_amount_spent
FROM customer c
LEFT JOIN book_order bo ON c.customer_id = bo.customer_id
GROUP BY c.customer_id, customer_full_name
ORDER BY total_amount_spent DESC;
```

9. Display the author's full name and the number of books they have written. Sort the results by the number of books in descending order.
```sql
SELECT CONCAT(a.first_name, ' ', a.last_name) AS author_full_name, COUNT(b.book_id) AS num_books_written
FROM author a
LEFT JOIN book b ON a.author_id = b.author_id
GROUP BY a.author_id, author_full_name
ORDER BY num_books_written DESC;
```

10. Display the book title and the number of orders for each book. Sort the results by the number of orders in descending order.
```sql
SELECT b.title, COUNT(bo.order_id) AS num_orders
FROM book b
LEFT JOIN book_order bo ON b.book_id = bo.book_id
GROUP BY b.book_id, title
ORDER BY num_orders DESC;
```
